rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Funções auxiliares otimizadas
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner() {
      return isAuthenticated() && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == resource.data.usuarioId);
    }
    
    function isCreatingOwn() {
      return isAuthenticated() && 
        (request.auth.uid == request.resource.data.userId || 
         request.auth.uid == request.resource.data.usuarioId);
    }
    
    function isUserDocument(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // === COLEÇÕES PRINCIPAIS ===

    // Perfis de usuários
    match /usuarios/{userId} {
      allow create: if isUserDocument(userId);
      allow read, update, delete: if isUserDocument(userId);
    }

    // Contas bancárias do usuário
    match /contas/{contaId} {
      allow read, update, delete: if isOwner();
      allow create: if isCreatingOwn();
      
      // Histórico de transações dentro de cada conta
      match /historico/{transacaoId} {
        allow read, write: if isOwner();
      }
    }

    // Receitas do usuário
    match /receitas/{receitaId} {
      allow read, update, delete: if isOwner();
      allow create: if isCreatingOwn();
    }

    // Despesas do usuário  
    match /despesas/{despesaId} {
      allow read, update, delete: if isOwner();
      allow create: if isCreatingOwn();
    }

    // Transferências entre contas
    match /transferencias/{transferenciaId} {
      allow read, update, delete: if isOwner();
      allow create: if isCreatingOwn();
    }

    // Cartões de crédito
    match /cartoes/{cartaoId} {
      allow read, update, delete: if isOwner();
      allow create: if isCreatingOwn();
      
      // Faturas do cartão
      match /faturas/{faturaId} {
        allow read, write: if isOwner();
      }
    }

    // Categorias personalizadas
    match /categorias/{categoriaId} {
      allow read, update, delete: if isOwner();
      allow create: if isCreatingOwn();
    }

    // Notificações (com auto-limpeza)
    match /notificacoes/{notificacaoId} {
      allow read, delete: if isOwner();
      allow create: if isCreatingOwn();
      allow update: if isOwner() && 
        (request.resource.data.keys().hasOnly(['lida', 'dataLeitura']) ||
         request.resource.data.keys().hasOnly(['lida']));
    }

    // Metas financeiras
    match /metas/{metaId} {
      allow read, update, delete: if isOwner();
      allow create: if isCreatingOwn();
    }

    // Orçamentos mensais
    match /orcamentos/{orcamentoId} {
      allow read, update, delete: if isOwner();
      allow create: if isCreatingOwn();
    }

    // === NOVAS REGRAS PARA GRÁFICOS ===

    // Dados agregados para gráficos (performance)
    match /graficos/{userId} {
      allow read, write: if isUserDocument(userId);
      
      // Dados mensais agregados
      match /mensais/{mesAno} {
        allow read, write: if isUserDocument(userId);
      }
      
      // Dados anuais agregados  
      match /anuais/{ano} {
        allow read, write: if isUserDocument(userId);
      }
      
      // Cache de categorias com totais
      match /categorias/{categoriaId} {
        allow read, write: if isUserDocument(userId);
      }
      
      // Cache de contas com saldos e movimentações
      match /contas/{contaId} {
        allow read, write: if isUserDocument(userId);
      }
    }

    // Estatísticas do usuário (para dashboards)
    match /estatisticas/{userId} {
      allow read, write: if isUserDocument(userId);
      
      // Resumos por período
      match /resumos/{periodoId} {
        allow read, write: if isUserDocument(userId);
      }
      
      // Análises de tendências
      match /tendencias/{tendenciaId} {
        allow read, write: if isUserDocument(userId);
      }
    }

    // Preferências de visualização de gráficos
    match /preferencesGraficos/{userId} {
      allow read, write: if isUserDocument(userId);
    }

    // === SUB-COLEÇÕES POR USUÁRIO ===

    match /users/{userId} {
      allow read, write: if isUserDocument(userId);
      
      // Dados específicos organizados por usuário
      match /{collection}/{documentId} {
        allow read, write: if isUserDocument(userId);
      }
    }

    // === DADOS PÚBLICOS/COMPARTILHADOS ===

    // Bancos disponíveis (referência pública)
    match /bancos/{bancoId} {
      allow read: if isAuthenticated();
    }

    // Tipos de conta disponíveis
    match /tiposContas/{tipoId} {
      allow read: if isAuthenticated();
    }

    // Categorias padrão do sistema
    match /categoriasDefault/{categoriaId} {
      allow read: if isAuthenticated();
    }

    // Configurações da aplicação
    match /configuracoes/{configId} {
      allow read: if isAuthenticated();
    }

    // Taxas de câmbio e dados econômicos
    match /economicos/{dadoId} {
      allow read: if isAuthenticated();
    }

    // === RECURSOS AVANÇADOS ===

    // Compartilhamentos familiares/grupos
    match /compartilhamentos/{compartilhamentoId} {
      allow read, write: if isAuthenticated() && 
        (request.auth.uid in resource.data.participantes);
      allow create: if isAuthenticated() && 
        (request.auth.uid in request.resource.data.participantes);
    }

    // Logs de auditoria (somente criação e leitura)
    match /logs/{logId} {
      allow read: if isOwner();
      allow create: if isCreatingOwn();
    }

    // Logs específicos de gráficos (para analytics)
    match /logsGraficos/{logId} {
      allow read: if isOwner();
      allow create: if isCreatingOwn();
      // Campos permitidos: userId, tipoGrafico, categoria, timestamp, dadosCarregados
    }

    // Backups de dados do usuário
    match /backups/{userId} {
      allow read, write: if isUserDocument(userId);
      
      match /snapshots/{snapshotId} {
        allow read, write: if isUserDocument(userId);
      }
    }

    // === SEGURANÇA ===

    // Bloquear tudo que não foi explicitamente permitido
    match /{document=**} {
      allow read, write: if false;
    }
  }
}